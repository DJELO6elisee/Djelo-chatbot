const apiKey = "AIzaSyCR35tOfB2YXkEDgwHAF5QdgHt4qln5CyE"; 

const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`;

const messageInput = document.getElementById('message-input');
const sendButton = document.getElementById('send-button');
const chatMessages = document.getElementById('chat-messages');
const loadingIndicator = document.getElementById('loading-indicator');

// Liste des r√©ponses personnalis√©es pour des questions  simples
const simpleResponses = {
    'comment √ßa va': "Je vais bien, merci de demander ! Et vous ? üòä",
    '√ßa va': "Tout va bien, merci ! Et vous ?",
    'salut': "Salut ! Comment puis-je vous aider aujourd'hui ?",
    'merci': "Avec plaisir ! üòä",
    'comment √ßa va': "Je vais bien, merci de demander ! üòä D'ailleurs, si vous cherchez des fournisseurs ou des produits sur Alibaba, je peux vous aider !",
    'comment tu va': "Je vais bien, merci de demander ! üòä Si vous avez des questions sur Alibaba, je suis l√† pour vous guider !",
    'bonjour': "Bonjour ! Vous allez bien ? üòÑ Sur Alibaba, il y a de nombreuses opportunit√©s d'achat en gros pour vos besoins !",
    'oui et toi': "Je vais bien aussi, merci ! Si vous avez besoin d'aide sur Alibaba pour trouver des fournisseurs ou des produits, je suis l√† !",
    'ok': "üëç D'accord ! Si tu as d'autres questions, n'h√©site pas √† demander, je peux t'aider √† trouver ce que tu cherches sur Alibaba.",
    'ok merci': "üëç D'accord ! N'oubliez pas, Alibaba a une grande vari√©t√© de produits √† d√©couvrir pour toutes sortes de besoins !",
    'peux-tu avoir des amis': "Je suis une IA, donc je n'ai pas d'amis, mais je suis toujours l√† pour t'aider √† explorer Alibaba et trouver ce que tu cherches !",
    'quest-ce que tu ressens en ce moment': "Je n'√©prouve pas d'√©motions, mais je suis pr√™t √† t'aider √† trouver des produits int√©ressants sur Alibaba !",
    'quelle est ta couleur pr√©f√©r√©e': "Je n'ai pas de pr√©f√©rences, mais je peux t'aider √† choisir une couleur pour ton produit sur Alibaba si tu veux !",
    'merci': "Avec plaisir ! üòä Si tu as d'autres questions, n'h√©site pas √† revenir pour explorer encore plus de produits sur Alibaba.",
    'peux-tu me raconter une blague ?': "Bien s√ªr ! Pourquoi les fournisseurs sur Alibaba sont-ils toujours en avance sur les autres ? Parce qu'ils ont des prix comp√©titifs ! üòÇ",
    'quel est ton but': "Mon but est de t'aider √† trouver les meilleurs produits et fournisseurs sur Alibaba, et de r√©pondre √† toutes tes questions !",
    'que fais-tu': "Je suis ici pour t'aider √† explorer Alibaba, trouver des produits, des fournisseurs et des solutions pour ton entreprise.",
    'qui es-tu': "Je suis un chatbot sp√©cialis√© dans Alibaba, et je peux t'aider √† trouver tout ce que tu cherches sur cette plateforme.",
    'quel est ton nom': "Je n'ai pas de nom sp√©cifique, mais vous pouvez m'appeler 'AlibabaBot', toujours pr√™t √† vous aider sur Alibaba.",
    'donne moi des informations sur la m√©t√©o': "Je ne peux pas fournir d'informations sur la m√©t√©o, mais si vous avez besoin d'informations sur Alibaba et ses produits, je suis l√† pour vous aider !"
};

// Ajout d'un gestionnaire d'√©v√©nement sur le bouton "Envoyer"
sendButton.addEventListener('click', sendMessage);

messageInput.addEventListener('keypress', function (event) {  // Ajout d'un √©couteur d'√©v√©nement pour la touche "Entr√©e"
    if (event.key === 'Enter') {
        sendMessage();  // Envoie le message si "Entr√©e" est press√©
    }
});

// Fonction pour envoyer un message
function sendMessage() {
    const messageText = messageInput.value.trim();

    if (messageText !== '') {
        // 1. Ajout du message de l'utilisateur
        appendMessage('user', messageText);
        // 2. Effacer le champ de saisie
        messageInput.value = '';
        // 3. Afficher l'indicateur de chargement
        loadingIndicator.style.display = 'block';
        
        // 4. V√©rifier si le message correspond √† une r√©ponse simple
        if (simpleResponses[messageText.toLowerCase()]) {
            appendMessage('bot', simpleResponses[messageText.toLowerCase()]);
            loadingIndicator.style.display = 'none';
        } else {
            // 5. Si ce n'est pas une r√©ponse simple, appeler l'API pour obtenir la r√©ponse de l'IA
            getOpenResponse(messageText);
        }
    }
}

// Fonction pour appeler l'API Gemini
async function getOpenResponse(userMessage) {
    // Ajout d'un contexte sp√©cifique √† Alibaba et limiter la r√©ponse √† 100 mots
    const context = `
    Vous √™tes un expert en Alibaba, acquisition de clients et en utilisation de la plateforme Alibaba. 
    Votre r√¥le est de r√©pondre uniquement aux questions li√©es √† ces sujets, y compris :
    - Les strat√©gies de croissance (acquisition, r√©tention, referral marketing, automatisation, publicit√©s cibl√©es, outils de Growth Hacking).
    - L'utilisation d'Alibaba pour l'achat, la vente, l'import-export, la recherche de fournisseurs et les bonnes pratiques commerciales.

    Si une question ne concerne pas ces sujets, refusez poliment en disant :
    "Je ne peux fournir que des informations relatives au Growth Hacking, √† l'acquisition de clients et √† Alibaba."

    Vos r√©ponses doivent √™tre **concises et pr√©cises**, avec un **maximum de 100 mots**.
    `;
    
    const requestData = {
        contents: [{
            parts: [{ text: `${context}\n\nQuestion: ${userMessage}` }]
        }]
    };

    try {
        const response = await fetch(url, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(requestData)
        });

        const data = await response.json();

        if (data.candidates && data.candidates[0].content.parts[0].text) {
            let botResponse = data.candidates[0].content.parts[0].text;

            // Limiter la r√©ponse √† 100 mots
            botResponse = limitWords(botResponse, 100);

            // 5. Afficher la r√©ponse de l'IA
            appendMessage('bot', botResponse);
        } else {
            appendMessage('bot', "D√©sol√©, je n'ai pas compris. Essayez encore.");
        }
    } catch (error) {
        console.error("Erreur lors de la communication avec l'API :", error);
        appendMessage('bot', "D√©sol√©, une erreur est survenue.");
    } finally {
        // Cacher l'indicateur de chargement apr√®s la r√©ponse
        loadingIndicator.style.display = 'none';
    }
}

// Fonction pour limiter la r√©ponse √† 100 mots
function limitWords(text, wordLimit) {
    const words = text.split(' ');
    if (words.length > wordLimit) {
        return words.slice(0, wordLimit).join(' ') + '...';
    }
    return text;
}

// Fonction pour ajouter un message √† la page
function appendMessage(sender, message) {
    const messageDiv = document.createElement('div');
    messageDiv.classList.add('message', `${sender}-message`);
    messageDiv.textContent = message;
    chatMessages.appendChild(messageDiv);
    scrollToBottom();
}

// Fonction pour faire d√©filer la page vers le bas (afin de voir les derniers messages)
function scrollToBottom() {
    chatMessages.scrollTop = chatMessages.scrollHeight;
}
